{
	"id": "84e3ed7008b9ce4b36f8d034d3aa829e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.12;\n\n/**\n* @notice Contract is a inheritable smart contract that will add a \n* New modifier called onlyOwner available in the smart contract inherting it\n* \n* onlyOwner makes a function only callable from the Token owner\n*\n*/\ncontract Ownable {\n\n    // _owner is the owner of the Token\n    address private _owner;\n\n    /**\n    * Event OwnershipTransferred is used to log that a ownership change of the token has occured\n    */\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n    * Modifier\n    * We create our own function modifier called onlyOwner, it will Require the current owner to be \n    * the same as msg.sender\n    */\n    modifier onlyOwner() {\n\n        require(_owner == msg.sender, \"Ownable: only owner can call this function\");\n        _;\n\n    }\n\n    constructor () {\n\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n\n    }\n\n    /**\n    * @notice owner() returns the currently assigned owner of the Token\n    * \n    */\n    function owner() public view returns(address) {\n\n        return _owner;\n\n    }\n\n    /**\n    * @notice renounceOwnership will set the owner to zero address\n    * This will make the contract owner less, It will make ALL functions with\n    * onlyOwner no longer callable.\n    * There is no way of restoring the owner\n    */\n    function renounceOwnership() public onlyOwner {\n\n        emit OwnershipTransferred(_owner, address(0));\n        \n\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":280:1522  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":867:975  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":902:912  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":893:899  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":893:912  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":960:966  _owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":927:967  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":956:957  0 */\n  0x00\n    /* \"contracts/Ownable.sol\":927:967  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Ownable.sol\":280:1522  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":280:1522  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":1400:1519  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/Ownable.sol\":1075:1153  function owner() public view returns(address) {... */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1400:1519  function renounceOwnership() public onlyOwner {... */\n    tag_6:\n        /* \"contracts/Ownable.sol\":785:795  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":775:795  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":775:781  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":775:795  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":767:842  require(_owner == msg.sender, \"Ownable: only owner can call this function\") */\n      tag_12\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_13\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_12:\n        /* \"contracts/Ownable.sol\":1499:1500  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1462:1502  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1483:1489  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1462:1502  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1400:1519  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1075:1153  function owner() public view returns(address) {... */\n    tag_8:\n        /* \"contracts/Ownable.sol\":1112:1119  address */\n      0x00\n        /* \"contracts/Ownable.sol\":1139:1145  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1132:1145  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":1075:1153  function owner() public view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_17:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_18:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_26\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_17\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_19:\n        /* \"#utility.yul\":328:352   */\n      tag_28\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_18\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_10:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_30\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_19\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:762   */\n    tag_20:\n        /* \"#utility.yul\":677:688   */\n      0x00\n        /* \"#utility.yul\":711:717   */\n      dup3\n        /* \"#utility.yul\":706:709   */\n      dup3\n        /* \"#utility.yul\":699:718   */\n      mstore\n        /* \"#utility.yul\":751:755   */\n      0x20\n        /* \"#utility.yul\":746:749   */\n      dup3\n        /* \"#utility.yul\":742:756   */\n      add\n        /* \"#utility.yul\":727:756   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":768:997   */\n    tag_21:\n        /* \"#utility.yul\":908:942   */\n      0x4f776e61626c653a206f6e6c79206f776e65722063616e2063616c6c20746869\n        /* \"#utility.yul\":904:905   */\n      0x00\n        /* \"#utility.yul\":896:902   */\n      dup3\n        /* \"#utility.yul\":892:906   */\n      add\n        /* \"#utility.yul\":885:943   */\n      mstore\n        /* \"#utility.yul\":977:989   */\n      0x732066756e6374696f6e00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":972:974   */\n      0x20\n        /* \"#utility.yul\":964:970   */\n      dup3\n        /* \"#utility.yul\":960:975   */\n      add\n        /* \"#utility.yul\":953:990   */\n      mstore\n        /* \"#utility.yul\":768:997   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1369   */\n    tag_22:\n        /* \"#utility.yul\":1145:1148   */\n      0x00\n        /* \"#utility.yul\":1166:1233   */\n      tag_34\n        /* \"#utility.yul\":1230:1232   */\n      0x2a\n        /* \"#utility.yul\":1225:1228   */\n      dup4\n        /* \"#utility.yul\":1166:1233   */\n      tag_20\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":1159:1233   */\n      swap2\n      pop\n        /* \"#utility.yul\":1242:1335   */\n      tag_35\n        /* \"#utility.yul\":1331:1334   */\n      dup3\n        /* \"#utility.yul\":1242:1335   */\n      tag_21\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":1360:1362   */\n      0x40\n        /* \"#utility.yul\":1355:1358   */\n      dup3\n        /* \"#utility.yul\":1351:1363   */\n      add\n        /* \"#utility.yul\":1344:1363   */\n      swap1\n      pop\n        /* \"#utility.yul\":1003:1369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1375:1794   */\n    tag_14:\n        /* \"#utility.yul\":1541:1545   */\n      0x00\n        /* \"#utility.yul\":1579:1581   */\n      0x20\n        /* \"#utility.yul\":1568:1577   */\n      dup3\n        /* \"#utility.yul\":1564:1582   */\n      add\n        /* \"#utility.yul\":1556:1582   */\n      swap1\n      pop\n        /* \"#utility.yul\":1628:1637   */\n      dup2\n        /* \"#utility.yul\":1622:1626   */\n      dup2\n        /* \"#utility.yul\":1618:1638   */\n      sub\n        /* \"#utility.yul\":1614:1615   */\n      0x00\n        /* \"#utility.yul\":1603:1612   */\n      dup4\n        /* \"#utility.yul\":1599:1616   */\n      add\n        /* \"#utility.yul\":1592:1639   */\n      mstore\n        /* \"#utility.yul\":1656:1787   */\n      tag_37\n        /* \"#utility.yul\":1782:1786   */\n      dup2\n        /* \"#utility.yul\":1656:1787   */\n      tag_22\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1648:1787   */\n      swap1\n      pop\n        /* \"#utility.yul\":1375:1794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206d646212b10d5948ff34474c8fef4286d4f34673f23803f00415be1888315d8f64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36102cc806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063715018a61461003b5780638da5cb5b14610045575b600080fd5b610043610063565b005b61004d61016e565b60405161005a91906101d8565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146100f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e890610276565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101c282610197565b9050919050565b6101d2816101b7565b82525050565b60006020820190506101ed60008301846101c9565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206f6e6c79206f776e65722063616e2063616c6c2074686960008201527f732066756e6374696f6e00000000000000000000000000000000000000000000602082015250565b6000610260602a836101f3565b915061026b82610204565b604082019050919050565b6000602082019050818103600083015261028f81610253565b905091905056fea26469706673582212206d646212b10d5948ff34474c8fef4286d4f34673f23803f00415be1888315d8f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2CC DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8 SWAP1 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2 DUP3 PUSH2 0x197 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D2 DUP2 PUSH2 0x1B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206F6E6C79206F776E65722063616E2063616C6C20746869 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x732066756E6374696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260 PUSH1 0x2A DUP4 PUSH2 0x1F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x26B DUP3 PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28F DUP2 PUSH2 0x253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x646212B10D5948FF34474C8FEF42 DUP7 0xD4 RETURN CHAINID PUSH20 0xF23803F00415BE1888315D8F64736F6C63430008 0xD STOP CALLER ",
							"sourceMap": "280:1242:0:-:0;;;867:108;;;;;;;;;;902:10;893:6;;:19;;;;;;;;;;;;;;;;;;960:6;;;;;;;;;;927:40;;956:1;927:40;;;;;;;;;;;;280:1242;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@owner_50": {
									"entryPoint": 366,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_65": {
									"entryPoint": 99,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1797:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "689:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "706:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "711:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "699:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "699:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "699:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "727:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "746:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "751:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "742:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "742:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "727:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "661:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "666:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "677:11:1",
														"type": ""
													}
												],
												"src": "593:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "874:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "896:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "904:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "892:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "892:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206f6e6c79206f776e65722063616e2063616c6c20746869",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "908:34:1",
																		"type": "",
																		"value": "Ownable: only owner can call thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "885:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "885:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "885:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "972:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "960:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "960:15:1"
																	},
																	{
																		"hexValue": "732066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "977:12:1",
																		"type": "",
																		"value": "s function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "953:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "953:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "953:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "866:6:1",
														"type": ""
													}
												],
												"src": "768:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1149:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1159:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1225:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1230:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1166:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1331:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a",
																	"nodeType": "YulIdentifier",
																	"src": "1242:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1351:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1344:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1137:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1145:3:1",
														"type": ""
													}
												],
												"src": "1003:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1546:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1556:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1568:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1579:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1564:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1564:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1556:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1603:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1614:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1599:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1599:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1622:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1628:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1618:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1592:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1592:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1648:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1782:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1656:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1648:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1526:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1541:4:1",
														"type": ""
													}
												],
												"src": "1375:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: only owner can call thi\")\n\n        mstore(add(memPtr, 32), \"s function\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063715018a61461003b5780638da5cb5b14610045575b600080fd5b610043610063565b005b61004d61016e565b60405161005a91906101d8565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146100f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e890610276565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101c282610197565b9050919050565b6101d2816101b7565b82525050565b60006020820190506101ed60008301846101c9565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206f6e6c79206f776e65722063616e2063616c6c2074686960008201527f732066756e6374696f6e00000000000000000000000000000000000000000000602082015250565b6000610260602a836101f3565b915061026b82610204565b604082019050919050565b6000602082019050818103600083015261028f81610253565b905091905056fea26469706673582212206d646212b10d5948ff34474c8fef4286d4f34673f23803f00415be1888315d8f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8 SWAP1 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2 DUP3 PUSH2 0x197 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D2 DUP2 PUSH2 0x1B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206F6E6C79206F776E65722063616E2063616C6C20746869 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x732066756E6374696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260 PUSH1 0x2A DUP4 PUSH2 0x1F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x26B DUP3 PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28F DUP2 PUSH2 0x253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x646212B10D5948FF34474C8FEF42 DUP7 0xD4 RETURN CHAINID PUSH20 0xF23803F00415BE1888315D8F64736F6C63430008 0xD STOP CALLER ",
							"sourceMap": "280:1242:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:119;;;:::i;:::-;;1075:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1400:119;785:10;775:20;;:6;;;;;;;;;;:20;;;767:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1499:1:::1;1462:40;;1483:6;::::0;::::1;;;;;;;;1462:40;;;;;;;;;;;;1400:119::o:0;1075:78::-;1112:7;1139:6;;;;;;;;;;;1132:13;;1075:78;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:169::-;677:11;711:6;706:3;699:19;751:4;746:3;742:14;727:29;;593:169;;;;:::o;768:229::-;908:34;904:1;896:6;892:14;885:58;977:12;972:2;964:6;960:15;953:37;768:229;:::o;1003:366::-;1145:3;1166:67;1230:2;1225:3;1166:67;:::i;:::-;1159:74;;1242:93;1331:3;1242:93;:::i;:::-;1360:2;1355:3;1351:12;1344:19;;1003:366;;;:::o;1375:419::-;1541:4;1579:2;1568:9;1564:18;1556:26;;1628:9;1622:4;1618:20;1614:1;1603:9;1599:17;1592:47;1656:131;1782:4;1656:131;:::i;:::-;1648:139;;1375:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "143200",
								"executionCost": "28134",
								"totalCost": "171334"
							},
							"external": {
								"owner()": "2522",
								"renounceOwnership()": "5967"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 280,
									"end": 1522,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 280,
									"end": 1522,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 1522,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 867,
									"end": 975,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 867,
									"end": 975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 867,
									"end": 975,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 902,
									"end": 912,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 893,
									"end": 899,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 893,
									"end": 899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 893,
									"end": 912,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 893,
									"end": 912,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 893,
									"end": 912,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 960,
									"end": 966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 960,
									"end": 966,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 960,
									"end": 966,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 956,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 280,
									"end": 1522,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 280,
									"end": 1522,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 1522,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 280,
									"end": 1522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 1522,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 280,
									"end": 1522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 1522,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d646212b10d5948ff34474c8fef4286d4f34673f23803f00415be1888315d8f64736f6c634300080d0033",
									".code": [
										{
											"begin": 280,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1522,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 785,
											"end": 795,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 775,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 775,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 775,
											"end": 795,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 593,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 593,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 706,
											"end": 709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 699,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 751,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 746,
											"end": 749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 742,
											"end": 756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 768,
											"end": 997,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 768,
											"end": 997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 908,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206F6E6C79206F776E65722063616E2063616C6C20746869"
										},
										{
											"begin": 904,
											"end": 905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 892,
											"end": 906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 885,
											"end": 943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 977,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "732066756E6374696F6E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 972,
											"end": 974,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 960,
											"end": 975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 953,
											"end": 990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 768,
											"end": 997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 768,
											"end": 997,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1003,
											"end": 1369,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1003,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1230,
											"end": 1232,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 1225,
											"end": 1228,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1166,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1331,
											"end": 1334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1242,
											"end": 1335,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1242,
											"end": 1335,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1242,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1344,
											"end": 1363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1344,
											"end": 1363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1369,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1375,
											"end": 1794,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1375,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1581,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1568,
											"end": 1577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1638,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1782,
											"end": 1786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1656,
											"end": 1787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1656,
											"end": 1787,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1656,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1648,
											"end": 1787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1648,
											"end": 1787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1794,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1794,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"OwnershipTransferred(address,address)\":{\"notice\":\"Event OwnershipTransferred is used to log that a ownership change of the token has occured\"}},\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"owner() returns the currently assigned owner of the Token \"},\"renounceOwnership()\":{\"notice\":\"renounceOwnership will set the owner to zero address This will make the contract owner less, It will make ALL functions with onlyOwner no longer callable. There is no way of restoring the owner\"}},\"notice\":\"Contract is a inheritable smart contract that will add a  New modifier called onlyOwner available in the smart contract inherting it  onlyOwner makes a function only callable from the Token owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xfb35d5679a4fed5d539fc57a2becd896cffe03f6469a5c5f4f13bb4b864bda89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16b95866c3a7c4d104ff3bed0fdd4e77dc732184d13f97f240454a374bdfce7\",\"dweb:/ipfs/QmW1h5hgwhXCNJyJNVAUnizu1yuaxoSHv3aw83qniqoRmF\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"OwnershipTransferred(address,address)": {
								"notice": "Event OwnershipTransferred is used to log that a ownership change of the token has occured"
							}
						},
						"kind": "user",
						"methods": {
							"owner()": {
								"notice": "owner() returns the currently assigned owner of the Token "
							},
							"renounceOwnership()": {
								"notice": "renounceOwnership will set the owner to zero address This will make the contract owner less, It will make ALL functions with onlyOwner no longer callable. There is no way of restoring the owner"
							}
						},
						"notice": "Contract is a inheritable smart contract that will add a  New modifier called onlyOwner available in the smart contract inherting it  onlyOwner makes a function only callable from the Token owner",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							66
						]
					},
					"id": 67,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "59:220:0",
								"text": " @notice Contract is a inheritable smart contract that will add a \n New modifier called onlyOwner available in the smart contract inherting it\n \n onlyOwner makes a function only callable from the Token owner"
							},
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66
							],
							"name": "Ownable",
							"nameLocation": "289:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "360:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 66,
									"src": "344:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "344:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "373:107:0",
										"text": " Event OwnershipTransferred is used to log that a ownership change of the token has occured"
									},
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 11,
									"name": "OwnershipTransferred",
									"nameLocation": "491:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "528:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "512:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "559:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "543:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:57:0"
									},
									"src": "485:84:0"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "756:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 15,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "775:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 16,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "785:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "775:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "797:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a",
																"typeString": "literal_string \"Ownable: only owner can call this function\""
															},
															"value": "Ownable: only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a",
																"typeString": "literal_string \"Ownable: only owner can call this function\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "767:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "767:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "767:75:0"
											},
											{
												"id": 22,
												"nodeType": "PlaceholderStatement",
												"src": "852:1:0"
											}
										]
									},
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "575:155:0",
										"text": " Modifier\n We create our own function modifier called onlyOwner, it will Require the current owner to be \n the same as msg.sender"
									},
									"id": 24,
									"name": "onlyOwner",
									"nameLocation": "744:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "753:2:0"
									},
									"src": "735:126:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "882:93:0",
										"statements": [
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 27,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "893:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 28,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "902:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "902:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "893:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "893:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 35,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "956:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "948:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 33,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "948:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "948:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 37,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "960:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 32,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "927:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "927:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "EmitStatement",
												"src": "922:45:0"
											}
										]
									},
									"id": 41,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "882:0:0"
									},
									"scope": 66,
									"src": "867:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1121:32:0",
										"statements": [
											{
												"expression": {
													"id": 47,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "1139:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 46,
												"id": 48,
												"nodeType": "Return",
												"src": "1132:13:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "981:89:0",
										"text": " @notice owner() returns the currently assigned owner of the Token\n "
									},
									"functionSelector": "8da5cb5b",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1084:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1089:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1112:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:9:0"
									},
									"scope": 66,
									"src": "1075:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "1446:73:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 57,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1483:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1499:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1491:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 58,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1491:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1491:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 56,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1462:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "EmitStatement",
												"src": "1457:45:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1159:236:0",
										"text": " @notice renounceOwnership will set the owner to zero address\n This will make the contract owner less, It will make ALL functions with\n onlyOwner no longer callable.\n There is no way of restoring the owner"
									},
									"functionSelector": "715018a6",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 54,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 53,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 24,
												"src": "1436:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1436:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1409:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1426:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:0"
									},
									"scope": 66,
									"src": "1400:119:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 67,
							"src": "280:1242:0",
							"usedErrors": []
						}
					],
					"src": "33:1489:0"
				},
				"id": 0
			}
		}
	}
}