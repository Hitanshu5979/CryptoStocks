{
	"id": "5475bfbfbca2bb7e52b506b885d397db",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.12;\n\n/**\n* @notice Contract is a inheritable smart contract that will add a \n* New modifier called onlyOwner available in the smart contract inherting it\n* \n* onlyOwner makes a function only callable from the Token owner\n*\n*/\ncontract Ownable {\n\n    // _owner is the owner of the Token\n    address private _owner;\n\n    /**\n    * Event OwnershipTransferred is used to log that a ownership change of the token has occured\n    */\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n    * Modifier\n    * We create our own function modifier called onlyOwner, it will Require the current owner to be \n    * the same as msg.sender\n    */\n    modifier onlyOwner() {\n\n        require(_owner == msg.sender, \"Ownable: only owner can call this function\");\n        _;\n\n    }\n\n    constructor () {\n\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n\n    }\n\n    /**\n    * @notice owner() returns the currently assigned owner of the Token\n    * \n    */\n    function owner() public view returns(address) {\n\n        return _owner;\n\n    }\n\n    /**\n    * @notice renounceOwnership will set the owner to zero address\n    * This will make the contract owner less, It will make ALL functions with\n    * onlyOwner no longer callable.\n    * There is no way of restoring the owner\n    */\n    function renounceOwnership() public onlyOwner {\n\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n\n    }\n\n    /**\n    * @notice transferOwnership will assign the {newOwner} as owner\n    *\n    */\n    function transferOwnership (address newOwner) public onlyOwner {\n\n        _transferOwnership(newOwner);\n\n    }\n\n    /**\n    * @notice _transferOwnership will assign the {newOwner} as owner\n    *\n    */\n    function _transferOwnership (address newOwner) internal {\n\n        require (newOwner != address(0), \"Ownable: new owner is zero address\");\n        \n\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":280:1996  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":867:975  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":902:912  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":893:899  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":893:912  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":960:966  _owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":927:967  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":956:957  0 */\n  0x00\n    /* \"contracts/Ownable.sol\":927:967  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Ownable.sol\":280:1996  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":280:1996  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":1400:1539  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/Ownable.sol\":1075:1153  function owner() public view returns(address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1634:1744  function transferOwnership (address newOwner) public onlyOwner {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/Ownable.sol\":1400:1539  function renounceOwnership() public onlyOwner {... */\n    tag_7:\n        /* \"contracts/Ownable.sol\":785:795  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":775:795  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":775:781  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":775:795  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":767:842  require(_owner == msg.sender, \"Ownable: only owner can call this function\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"contracts/Ownable.sol\":1499:1500  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1462:1502  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1483:1489  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1462:1502  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1529:1530  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1512:1518  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":1512:1531  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":1400:1539  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1075:1153  function owner() public view returns(address) {... */\n    tag_9:\n        /* \"contracts/Ownable.sol\":1112:1119  address */\n      0x00\n        /* \"contracts/Ownable.sol\":1139:1145  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1132:1145  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":1075:1153  function owner() public view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1634:1744  function transferOwnership (address newOwner) public onlyOwner {... */\n    tag_15:\n        /* \"contracts/Ownable.sol\":785:795  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":775:795  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":775:781  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":775:795  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":767:842  require(_owner == msg.sender, \"Ownable: only owner can call this function\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap1\n      tag_19\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"contracts/Ownable.sol\":1708:1736  _transferOwnership(newOwner) */\n      tag_26\n        /* \"contracts/Ownable.sol\":1727:1735  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":1708:1726  _transferOwnership */\n      tag_27\n        /* \"contracts/Ownable.sol\":1708:1736  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_26:\n        /* \"contracts/Ownable.sol\":1634:1744  function transferOwnership (address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1840:1994  function _transferOwnership (address newOwner) internal {... */\n    tag_27:\n        /* \"contracts/Ownable.sol\":1936:1937  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1916:1938  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1916:1924  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":1916:1938  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Ownable.sol\":1907:1977  require (newOwner != address(0), \"Ownable: new owner is zero address\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"contracts/Ownable.sol\":1840:1994  function _transferOwnership (address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_32:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_33:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_48\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_32\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_34:\n        /* \"#utility.yul\":328:352   */\n      tag_50\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_33\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_11:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_52\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_34\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_36:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_38:\n        /* \"#utility.yul\":993:1017   */\n      tag_57\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_33\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_58:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_39:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_60\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_38\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_14:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_63\n      tag_36\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1269:1388   */\n    tag_62:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_64\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_39\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1697   */\n    tag_40:\n        /* \"#utility.yul\":1612:1623   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup3\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1634:1653   */\n      mstore\n        /* \"#utility.yul\":1686:1690   */\n      0x20\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1691   */\n      add\n        /* \"#utility.yul\":1662:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1932   */\n    tag_41:\n        /* \"#utility.yul\":1843:1877   */\n      0x4f776e61626c653a206f6e6c79206f776e65722063616e2063616c6c20746869\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1831:1837   */\n      dup3\n        /* \"#utility.yul\":1827:1841   */\n      add\n        /* \"#utility.yul\":1820:1878   */\n      mstore\n        /* \"#utility.yul\":1912:1924   */\n      0x732066756e6374696f6e00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1907:1909   */\n      0x20\n        /* \"#utility.yul\":1899:1905   */\n      dup3\n        /* \"#utility.yul\":1895:1910   */\n      add\n        /* \"#utility.yul\":1888:1925   */\n      mstore\n        /* \"#utility.yul\":1703:1932   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1938:2304   */\n    tag_42:\n        /* \"#utility.yul\":2080:2083   */\n      0x00\n        /* \"#utility.yul\":2101:2168   */\n      tag_68\n        /* \"#utility.yul\":2165:2167   */\n      0x2a\n        /* \"#utility.yul\":2160:2163   */\n      dup4\n        /* \"#utility.yul\":2101:2168   */\n      tag_40\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2094:2168   */\n      swap2\n      pop\n        /* \"#utility.yul\":2177:2270   */\n      tag_69\n        /* \"#utility.yul\":2266:2269   */\n      dup3\n        /* \"#utility.yul\":2177:2270   */\n      tag_41\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2295:2297   */\n      0x40\n        /* \"#utility.yul\":2290:2293   */\n      dup3\n        /* \"#utility.yul\":2286:2298   */\n      add\n        /* \"#utility.yul\":2279:2298   */\n      swap1\n      pop\n        /* \"#utility.yul\":1938:2304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2729   */\n    tag_19:\n        /* \"#utility.yul\":2476:2480   */\n      0x00\n        /* \"#utility.yul\":2514:2516   */\n      0x20\n        /* \"#utility.yul\":2503:2512   */\n      dup3\n        /* \"#utility.yul\":2499:2517   */\n      add\n        /* \"#utility.yul\":2491:2517   */\n      swap1\n      pop\n        /* \"#utility.yul\":2563:2572   */\n      dup2\n        /* \"#utility.yul\":2557:2561   */\n      dup2\n        /* \"#utility.yul\":2553:2573   */\n      sub\n        /* \"#utility.yul\":2549:2550   */\n      0x00\n        /* \"#utility.yul\":2538:2547   */\n      dup4\n        /* \"#utility.yul\":2534:2551   */\n      add\n        /* \"#utility.yul\":2527:2574   */\n      mstore\n        /* \"#utility.yul\":2591:2722   */\n      tag_71\n        /* \"#utility.yul\":2717:2721   */\n      dup2\n        /* \"#utility.yul\":2591:2722   */\n      tag_42\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2583:2722   */\n      swap1\n      pop\n        /* \"#utility.yul\":2310:2729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2735:2956   */\n    tag_43:\n        /* \"#utility.yul\":2875:2909   */\n      0x4f776e61626c653a206e6577206f776e6572206973207a65726f206164647265\n        /* \"#utility.yul\":2871:2872   */\n      0x00\n        /* \"#utility.yul\":2863:2869   */\n      dup3\n        /* \"#utility.yul\":2859:2873   */\n      add\n        /* \"#utility.yul\":2852:2910   */\n      mstore\n        /* \"#utility.yul\":2944:2948   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2939:2941   */\n      0x20\n        /* \"#utility.yul\":2931:2937   */\n      dup3\n        /* \"#utility.yul\":2927:2942   */\n      add\n        /* \"#utility.yul\":2920:2949   */\n      mstore\n        /* \"#utility.yul\":2735:2956   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2962:3328   */\n    tag_44:\n        /* \"#utility.yul\":3104:3107   */\n      0x00\n        /* \"#utility.yul\":3125:3192   */\n      tag_74\n        /* \"#utility.yul\":3189:3191   */\n      0x22\n        /* \"#utility.yul\":3184:3187   */\n      dup4\n        /* \"#utility.yul\":3125:3192   */\n      tag_40\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":3118:3192   */\n      swap2\n      pop\n        /* \"#utility.yul\":3201:3294   */\n      tag_75\n        /* \"#utility.yul\":3290:3293   */\n      dup3\n        /* \"#utility.yul\":3201:3294   */\n      tag_43\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":3319:3321   */\n      0x40\n        /* \"#utility.yul\":3314:3317   */\n      dup3\n        /* \"#utility.yul\":3310:3322   */\n      add\n        /* \"#utility.yul\":3303:3322   */\n      swap1\n      pop\n        /* \"#utility.yul\":2962:3328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3334:3753   */\n    tag_31:\n        /* \"#utility.yul\":3500:3504   */\n      0x00\n        /* \"#utility.yul\":3538:3540   */\n      0x20\n        /* \"#utility.yul\":3527:3536   */\n      dup3\n        /* \"#utility.yul\":3523:3541   */\n      add\n        /* \"#utility.yul\":3515:3541   */\n      swap1\n      pop\n        /* \"#utility.yul\":3587:3596   */\n      dup2\n        /* \"#utility.yul\":3581:3585   */\n      dup2\n        /* \"#utility.yul\":3577:3597   */\n      sub\n        /* \"#utility.yul\":3573:3574   */\n      0x00\n        /* \"#utility.yul\":3562:3571   */\n      dup4\n        /* \"#utility.yul\":3558:3575   */\n      add\n        /* \"#utility.yul\":3551:3598   */\n      mstore\n        /* \"#utility.yul\":3615:3746   */\n      tag_77\n        /* \"#utility.yul\":3741:3745   */\n      dup2\n        /* \"#utility.yul\":3615:3746   */\n      tag_44\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":3607:3746   */\n      swap1\n      pop\n        /* \"#utility.yul\":3334:3753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d65b7a477b51257cb48800d6ac8dfc1b0c5330aa4a21a34e8548f83bc9883d4b64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610530806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101d6565b604051610065919061034c565b60405180910390f35b61008860048036038101906100839190610398565b6101ff565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610118576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010f90610448565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461028d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028490610448565b60405180910390fd5b61029681610299565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff906104da565b60405180910390fd5b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103368261030b565b9050919050565b6103468161032b565b82525050565b6000602082019050610361600083018461033d565b92915050565b600080fd5b6103758161032b565b811461038057600080fd5b50565b6000813590506103928161036c565b92915050565b6000602082840312156103ae576103ad610367565b5b60006103bc84828501610383565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206f6e6c79206f776e65722063616e2063616c6c2074686960008201527f732066756e6374696f6e00000000000000000000000000000000000000000000602082015250565b6000610432602a836103c5565b915061043d826103d6565b604082019050919050565b6000602082019050818103600083015261046181610425565b9050919050565b7f4f776e61626c653a206e6577206f776e6572206973207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006104c46022836103c5565b91506104cf82610468565b604082019050919050565b600060208201905081810360008301526104f3816104b7565b905091905056fea2646970667358221220d65b7a477b51257cb48800d6ac8dfc1b0c5330aa4a21a34e8548f83bc9883d4b64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x530 DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x118 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284 SWAP1 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x296 DUP2 PUSH2 0x299 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FF SWAP1 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x336 DUP3 PUSH2 0x30B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x346 DUP2 PUSH2 0x32B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x361 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x375 DUP2 PUSH2 0x32B JUMP JUMPDEST DUP2 EQ PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x392 DUP2 PUSH2 0x36C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AD PUSH2 0x367 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BC DUP5 DUP3 DUP6 ADD PUSH2 0x383 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206F6E6C79206F776E65722063616E2063616C6C20746869 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x732066756E6374696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x432 PUSH1 0x2A DUP4 PUSH2 0x3C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x43D DUP3 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x461 DUP2 PUSH2 0x425 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E6572206973207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4 PUSH1 0x22 DUP4 PUSH2 0x3C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CF DUP3 PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F3 DUP2 PUSH2 0x4B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 JUMPDEST PUSH27 0x477B51257CB48800D6AC8DFC1B0C5330AA4A21A34E8548F83BC988 RETURNDATASIZE 0x4B PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "280:1716:0:-:0;;;867:108;;;;;;;;;;902:10;893:6;;:19;;;;;;;;;;;;;;;;;;960:6;;;;;;;;;;927:40;;956:1;927:40;;;;;;;;;;;;280:1716;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_102": {
									"entryPoint": 665,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_50": {
									"entryPoint": 470,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_72": {
									"entryPoint": 138,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_85": {
									"entryPoint": 511,
									"id": 85,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3756:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:1",
														"type": ""
													}
												],
												"src": "593:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1020:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:43:1"
															},
															"nodeType": "YulIf",
															"src": "973:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "956:5:1",
														"type": ""
													}
												],
												"src": "920:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1078:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1086:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1094:5:1",
														"type": ""
													}
												],
												"src": "1048:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1305:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:32:1"
															},
															"nodeType": "YulIf",
															"src": "1269:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1398:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1442:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1240:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1252:6:1",
														"type": ""
													}
												],
												"src": "1193:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1624:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1634:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1662:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1662:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1596:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1601:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1612:11:1",
														"type": ""
													}
												],
												"src": "1528:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1809:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206f6e6c79206f776e65722063616e2063616c6c20746869",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1843:34:1",
																		"type": "",
																		"value": "Ownable: only owner can call thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1820:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1899:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1907:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1895:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1895:15:1"
																	},
																	{
																		"hexValue": "732066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1912:12:1",
																		"type": "",
																		"value": "s function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1888:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1888:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1801:6:1",
														"type": ""
													}
												],
												"src": "1703:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2084:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2094:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2160:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2165:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2101:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2101:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2266:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a",
																	"nodeType": "YulIdentifier",
																	"src": "2177:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2177:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2177:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2279:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2290:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2295:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2286:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2279:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2072:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2080:3:1",
														"type": ""
													}
												],
												"src": "1938:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2481:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2491:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2503:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2514:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2499:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2491:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2549:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2557:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2563:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2553:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2553:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2527:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2527:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2583:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2717:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2591:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2591:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2583:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2461:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2476:4:1",
														"type": ""
													}
												],
												"src": "2310:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2841:115:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2863:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2871:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2859:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2859:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e6572206973207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2875:34:1",
																		"type": "",
																		"value": "Ownable: new owner is zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2852:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2852:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2939:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2927:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2927:15:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2944:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2920:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2920:29:1"
														}
													]
												},
												"name": "store_literal_in_memory_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2833:6:1",
														"type": ""
													}
												],
												"src": "2735:221:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3108:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3118:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3184:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3189:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3125:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3125:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3118:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3290:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071",
																	"nodeType": "YulIdentifier",
																	"src": "3201:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3201:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3201:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3303:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3314:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3319:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3310:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3310:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3303:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3096:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3104:3:1",
														"type": ""
													}
												],
												"src": "2962:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3505:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3515:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3527:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3538:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3523:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3515:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3562:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3573:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3558:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3581:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3587:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3577:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3577:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3551:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3551:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3607:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3741:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3615:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3615:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3607:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3485:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3500:4:1",
														"type": ""
													}
												],
												"src": "3334:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: only owner can call thi\")\n\n        mstore(add(memPtr, 32), \"s function\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101d6565b604051610065919061034c565b60405180910390f35b61008860048036038101906100839190610398565b6101ff565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610118576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010f90610448565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461028d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028490610448565b60405180910390fd5b61029681610299565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff906104da565b60405180910390fd5b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103368261030b565b9050919050565b6103468161032b565b82525050565b6000602082019050610361600083018461033d565b92915050565b600080fd5b6103758161032b565b811461038057600080fd5b50565b6000813590506103928161036c565b92915050565b6000602082840312156103ae576103ad610367565b5b60006103bc84828501610383565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206f6e6c79206f776e65722063616e2063616c6c2074686960008201527f732066756e6374696f6e00000000000000000000000000000000000000000000602082015250565b6000610432602a836103c5565b915061043d826103d6565b604082019050919050565b6000602082019050818103600083015261046181610425565b9050919050565b7f4f776e61626c653a206e6577206f776e6572206973207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006104c46022836103c5565b91506104cf82610468565b604082019050919050565b600060208201905081810360008301526104f3816104b7565b905091905056fea2646970667358221220d65b7a477b51257cb48800d6ac8dfc1b0c5330aa4a21a34e8548f83bc9883d4b64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x118 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284 SWAP1 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x296 DUP2 PUSH2 0x299 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FF SWAP1 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x336 DUP3 PUSH2 0x30B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x346 DUP2 PUSH2 0x32B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x361 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x375 DUP2 PUSH2 0x32B JUMP JUMPDEST DUP2 EQ PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x392 DUP2 PUSH2 0x36C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AD PUSH2 0x367 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BC DUP5 DUP3 DUP6 ADD PUSH2 0x383 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206F6E6C79206F776E65722063616E2063616C6C20746869 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x732066756E6374696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x432 PUSH1 0x2A DUP4 PUSH2 0x3C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x43D DUP3 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x461 DUP2 PUSH2 0x425 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E6572206973207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4 PUSH1 0x22 DUP4 PUSH2 0x3C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CF DUP3 PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F3 DUP2 PUSH2 0x4B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 JUMPDEST PUSH27 0x477B51257CB48800D6AC8DFC1B0C5330AA4A21A34E8548F83BC988 RETURNDATASIZE 0x4B PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "280:1716:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:139;;;:::i;:::-;;1075:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1634:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1400:139;785:10;775:20;;:6;;;;;;;;;;:20;;;767:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1499:1:::1;1462:40;;1483:6;::::0;::::1;;;;;;;;1462:40;;;;;;;;;;;;1529:1;1512:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1400:139::o:0;1075:78::-;1112:7;1139:6;;;;;;;;;;;1132:13;;1075:78;:::o;1634:110::-;785:10;775:20;;:6;;;;;;;;;;:20;;;767:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1708:28:::1;1727:8;1708:18;:28::i;:::-;1634:110:::0;:::o;1840:154::-;1936:1;1916:22;;:8;:22;;;1907:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1840:154;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:229::-;1843:34;1839:1;1831:6;1827:14;1820:58;1912:12;1907:2;1899:6;1895:15;1888:37;1703:229;:::o;1938:366::-;2080:3;2101:67;2165:2;2160:3;2101:67;:::i;:::-;2094:74;;2177:93;2266:3;2177:93;:::i;:::-;2295:2;2290:3;2286:12;2279:19;;1938:366;;;:::o;2310:419::-;2476:4;2514:2;2503:9;2499:18;2491:26;;2563:9;2557:4;2553:20;2549:1;2538:9;2534:17;2527:47;2591:131;2717:4;2591:131;:::i;:::-;2583:139;;2310:419;;;:::o;2735:221::-;2875:34;2871:1;2863:6;2859:14;2852:58;2944:4;2939:2;2931:6;2927:15;2920:29;2735:221;:::o;2962:366::-;3104:3;3125:67;3189:2;3184:3;3125:67;:::i;:::-;3118:74;;3201:93;3290:3;3201:93;:::i;:::-;3319:2;3314:3;3310:12;3303:19;;2962:366;;;:::o;3334:419::-;3500:4;3538:2;3527:9;3523:18;3515:26;;3587:9;3581:4;3577:20;3573:1;3562:9;3558:17;3551:47;3615:131;3741:4;3615:131;:::i;:::-;3607:139;;3334:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "265600",
								"executionCost": "28250",
								"totalCost": "293850"
							},
							"external": {
								"owner()": "2522",
								"renounceOwnership()": "30234",
								"transferOwnership(address)": "3002"
							},
							"internal": {
								"_transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 280,
									"end": 1996,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 280,
									"end": 1996,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 1996,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 867,
									"end": 975,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 867,
									"end": 975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 867,
									"end": 975,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 902,
									"end": 912,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 893,
									"end": 899,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 893,
									"end": 899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 893,
									"end": 912,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 893,
									"end": 912,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 893,
									"end": 912,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 960,
									"end": 966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 960,
									"end": 966,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 960,
									"end": 966,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 956,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 280,
									"end": 1996,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 280,
									"end": 1996,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 1996,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 280,
									"end": 1996,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 1996,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 280,
									"end": 1996,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 1996,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d65b7a477b51257cb48800d6ac8dfc1b0c5330aa4a21a34e8548f83bc9883d4b64736f6c634300080d0033",
									".code": [
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1996,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1539,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1400,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1400,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1400,
											"end": 1539,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1539,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1400,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1539,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1539,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1400,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 785,
											"end": 795,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 775,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 775,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 775,
											"end": 795,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1502,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1539,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 785,
											"end": 795,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 775,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 775,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 775,
											"end": 795,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 767,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 767,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1727,
											"end": 1735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1708,
											"end": 1736,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1708,
											"end": 1736,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1708,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1744,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1840,
											"end": 1994,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1840,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 1937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1916,
											"end": 1938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1916,
											"end": 1938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1938,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1907,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1994,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1703,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1703,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206F6E6C79206F776E65722063616E2063616C6C20746869"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "PUSH",
											"source": 1,
											"value": "732066756E6374696F6E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 1907,
											"end": 1909,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1932,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1938,
											"end": 2304,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1938,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2165,
											"end": 2167,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 2160,
											"end": 2163,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2168,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2101,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2101,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2266,
											"end": 2269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2177,
											"end": 2270,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2177,
											"end": 2270,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2177,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 2304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 2304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 2304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 2304,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2310,
											"end": 2729,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2310,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2574,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2717,
											"end": 2721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2591,
											"end": 2722,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2591,
											"end": 2722,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2591,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2729,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2735,
											"end": 2956,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2735,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2909,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E6572206973207A65726F206164647265"
										},
										{
											"begin": 2871,
											"end": 2872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2948,
											"name": "PUSH",
											"source": 1,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2939,
											"end": 2941,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2949,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2956,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2962,
											"end": 3328,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2962,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3189,
											"end": 3191,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3184,
											"end": 3187,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3125,
											"end": 3192,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3125,
											"end": 3192,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3125,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3290,
											"end": 3293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3201,
											"end": 3294,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3201,
											"end": 3294,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3201,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3321,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3328,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3334,
											"end": 3753,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3334,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3540,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3527,
											"end": 3536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3587,
											"end": 3596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3597,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3571,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3741,
											"end": 3745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3615,
											"end": 3746,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3615,
											"end": 3746,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3615,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3753,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"OwnershipTransferred(address,address)\":{\"notice\":\"Event OwnershipTransferred is used to log that a ownership change of the token has occured\"}},\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"owner() returns the currently assigned owner of the Token \"},\"renounceOwnership()\":{\"notice\":\"renounceOwnership will set the owner to zero address This will make the contract owner less, It will make ALL functions with onlyOwner no longer callable. There is no way of restoring the owner\"},\"transferOwnership(address)\":{\"notice\":\"transferOwnership will assign the {newOwner} as owner\"}},\"notice\":\"Contract is a inheritable smart contract that will add a  New modifier called onlyOwner available in the smart contract inherting it  onlyOwner makes a function only callable from the Token owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0x23a491d18b0c4cafdc91423241903d21e6feb77e3e54d134ab675afcfa5800ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://568ec08bed45838461fd26206b6225593f6e099c7bd7846280e0f24ae500e43b\",\"dweb:/ipfs/QmYbDuQAYvU5wYk1tCUaCrNuHcTkRRCatKR4USi4PHtw4U\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"OwnershipTransferred(address,address)": {
								"notice": "Event OwnershipTransferred is used to log that a ownership change of the token has occured"
							}
						},
						"kind": "user",
						"methods": {
							"owner()": {
								"notice": "owner() returns the currently assigned owner of the Token "
							},
							"renounceOwnership()": {
								"notice": "renounceOwnership will set the owner to zero address This will make the contract owner less, It will make ALL functions with onlyOwner no longer callable. There is no way of restoring the owner"
							},
							"transferOwnership(address)": {
								"notice": "transferOwnership will assign the {newOwner} as owner"
							}
						},
						"notice": "Contract is a inheritable smart contract that will add a  New modifier called onlyOwner available in the smart contract inherting it  onlyOwner makes a function only callable from the Token owner",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/Ownable.sol:78:5:\n   |\n78 |     function _transferOwnership (address newOwner) internal {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1994,
					"file": "contracts/Ownable.sol",
					"start": 1840
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "59:220:0",
								"text": " @notice Contract is a inheritable smart contract that will add a \n New modifier called onlyOwner available in the smart contract inherting it\n \n onlyOwner makes a function only callable from the Token owner"
							},
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103
							],
							"name": "Ownable",
							"nameLocation": "289:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "360:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "344:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "344:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "373:107:0",
										"text": " Event OwnershipTransferred is used to log that a ownership change of the token has occured"
									},
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 11,
									"name": "OwnershipTransferred",
									"nameLocation": "491:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "528:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "512:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "559:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "543:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:57:0"
									},
									"src": "485:84:0"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "756:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 15,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "775:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 16,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "785:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "775:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "797:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a",
																"typeString": "literal_string \"Ownable: only owner can call this function\""
															},
															"value": "Ownable: only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a",
																"typeString": "literal_string \"Ownable: only owner can call this function\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "767:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "767:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "767:75:0"
											},
											{
												"id": 22,
												"nodeType": "PlaceholderStatement",
												"src": "852:1:0"
											}
										]
									},
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "575:155:0",
										"text": " Modifier\n We create our own function modifier called onlyOwner, it will Require the current owner to be \n the same as msg.sender"
									},
									"id": 24,
									"name": "onlyOwner",
									"nameLocation": "744:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "753:2:0"
									},
									"src": "735:126:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "882:93:0",
										"statements": [
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 27,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "893:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 28,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "902:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "902:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "893:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "893:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 35,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "956:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "948:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 33,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "948:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "948:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 37,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "960:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 32,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "927:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "927:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "EmitStatement",
												"src": "922:45:0"
											}
										]
									},
									"id": 41,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "882:0:0"
									},
									"scope": 103,
									"src": "867:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1121:32:0",
										"statements": [
											{
												"expression": {
													"id": 47,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "1139:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 46,
												"id": 48,
												"nodeType": "Return",
												"src": "1132:13:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "981:89:0",
										"text": " @notice owner() returns the currently assigned owner of the Token\n "
									},
									"functionSelector": "8da5cb5b",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1084:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1089:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1112:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:9:0"
									},
									"scope": 103,
									"src": "1075:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1446:93:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 57,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1483:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1499:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1491:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 58,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1491:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1491:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 56,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1462:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "EmitStatement",
												"src": "1457:45:0"
											},
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 64,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1512:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1529:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1521:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 65,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1521:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1521:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1512:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1512:19:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1159:236:0",
										"text": " @notice renounceOwnership will set the owner to zero address\n This will make the contract owner less, It will make ALL functions with\n onlyOwner no longer callable.\n There is no way of restoring the owner"
									},
									"functionSelector": "715018a6",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 54,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 53,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 24,
												"src": "1436:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1436:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1409:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1426:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:0"
									},
									"scope": 103,
									"src": "1400:139:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "1697:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 81,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "1727:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 80,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1708:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1708:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "1708:28:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1545:84:0",
										"text": " @notice transferOwnership will assign the {newOwner} as owner"
									},
									"functionSelector": "f2fde38b",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 78,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 77,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 24,
												"src": "1687:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1687:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1643:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1670:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1662:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:18:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1697:0:0"
									},
									"scope": 103,
									"src": "1634:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1896:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 92,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "1916:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1936:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 94,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1928:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 93,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1928:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1928:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1916:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e6572206973207a65726f2061646472657373",
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1940:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071",
																"typeString": "literal_string \"Ownable: new owner is zero address\""
															},
															"value": "Ownable: new owner is zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_def56c07370a9fc16b83235d1bcf7237781e9ad1dd5a18582078a352772ea071",
																"typeString": "literal_string \"Ownable: new owner is zero address\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1907:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1907:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1907:70:0"
											}
										]
									},
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "1750:85:0",
										"text": " @notice _transferOwnership will assign the {newOwner} as owner"
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1849:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1877:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1869:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1868:18:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1896:0:0"
									},
									"scope": 103,
									"src": "1840:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 104,
							"src": "280:1716:0",
							"usedErrors": []
						}
					],
					"src": "33:1963:0"
				},
				"id": 0
			}
		}
	}
}