{
	"id": "dda04da40fa7f0af413f0bbfeb3a51bb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.12;\n\n/**\n* @notice Contract is a inheritable smart contract that will add a \n* New modifier called onlyOwner available in the smart contract inherting it\n* \n* onlyOwner makes a function only callable from the Token owner\n*\n*/\ncontract Ownable {\n\n    // _owner is the owner of the Token\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":280:342  contract Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":280:342  contract Ownable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d682678f81873b3575bf95c3515f2798f93fa5625ddf798f3ceab4b7551a577964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220d682678f81873b3575bf95c3515f2798f93fa5625ddf798f3ceab4b7551a577964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 DUP3 PUSH8 0x8F81873B3575BF95 0xC3 MLOAD 0x5F 0x27 SWAP9 0xF9 EXTCODEHASH 0xA5 PUSH3 0x5DDF79 DUP16 EXTCODECOPY 0xEA 0xB4 0xB7 SSTORE BYTE JUMPI PUSH26 0x64736F6C634300080D0033000000000000000000000000000000 ",
							"sourceMap": "280:62:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220d682678f81873b3575bf95c3515f2798f93fa5625ddf798f3ceab4b7551a577964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 DUP3 PUSH8 0x8F81873B3575BF95 0xC3 MLOAD 0x5F 0x27 SWAP9 0xF9 EXTCODEHASH 0xA5 PUSH3 0x5DDF79 DUP16 EXTCODECOPY 0xEA 0xB4 0xB7 SSTORE BYTE JUMPI PUSH26 0x64736F6C634300080D0033000000000000000000000000000000 ",
							"sourceMap": "280:62:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 280,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 280,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 342,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 280,
									"end": 342,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 280,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 342,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 280,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 280,
									"end": 342,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 280,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 342,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 280,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 280,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 280,
									"end": 342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 280,
									"end": 342,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 280,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 342,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 280,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 342,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 280,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 342,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d682678f81873b3575bf95c3515f2798f93fa5625ddf798f3ceab4b7551a577964736f6c634300080d0033",
									".code": [
										{
											"begin": 280,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 280,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 280,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 342,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract is a inheritable smart contract that will add a  New modifier called onlyOwner available in the smart contract inherting it  onlyOwner makes a function only callable from the Token owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xaf5b5c4bda1e17a36cc72750fae5d7a6ef780889b2906ef874dc22b12fb3800d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75bb41f5e4f369d23b6c7e7f83294ce13d48641796b7e86e3a2e19fa4895353a\",\"dweb:/ipfs/QmdN9Ufcnuji9bscNHT9NhweyXNhF4B9rPA75X7PUt2YRZ\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contract is a inheritable smart contract that will add a  New modifier called onlyOwner available in the smart contract inherting it  onlyOwner makes a function only callable from the Token owner",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							3
						]
					},
					"id": 4,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "59:220:0",
								"text": " @notice Contract is a inheritable smart contract that will add a \n New modifier called onlyOwner available in the smart contract inherting it\n \n onlyOwner makes a function only callable from the Token owner"
							},
							"fullyImplemented": true,
							"id": 3,
							"linearizedBaseContracts": [
								3
							],
							"name": "Ownable",
							"nameLocation": "289:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 4,
							"src": "280:62:0",
							"usedErrors": []
						}
					],
					"src": "33:309:0"
				},
				"id": 0
			}
		}
	}
}