{
	"id": "eac9ab5b1eb15ad589d722d6503447bf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.12;\n\n/**\n* @notice Contract is a inheritable smart contract that will add a \n* New modifier called onlyOwner available in the smart contract inherting it\n* \n* onlyOwner makes a function only callable from the Token owner\n*\n*/\ncontract Ownable {\n\n    // _owner is the owner of the Token\n    address private _owner;\n\n    /**\n    * Event OwnershipTransferred is used to log that a ownership change of the token has occured\n    */\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n    * Modifier\n    * We create our own function modifier called onlyOwner, it will Require the current owner to be \n    * the same as msg.sender\n    */\n    modifier onlyOwner() {\n\n        require(_owner == msg.sender, \"Ownable: only owner can call this function\");\n        _;\n\n    }\n\n    constructor () {\n\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n\n    }\n\n    /**\n    * @notice owner() returns the currently assigned owner of the Token\n    * \n    */\n    function owner() public view returns(address) {\n\n        return _owner;\n\n    }\n\n    /**\n    * @notice renounceOwnership will set the owner to zero address\n    * This will make the contract owner less, It will make ALL functions with\n    * onlyOwner no longer callable.\n    * There is no way of restoring the owner\n    */\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":280:1398  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":867:975  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":902:912  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":893:899  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":893:912  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":960:966  _owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":927:967  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":956:957  0 */\n  0x00\n    /* \"contracts/Ownable.sol\":927:967  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Ownable.sol\":280:1398  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":280:1398  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":1075:1153  function owner() public view returns(address) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"contracts/Ownable.sol\":1112:1119  address */\n      0x00\n        /* \"contracts/Ownable.sol\":1139:1145  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1132:1145  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":1075:1153  function owner() public view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_9:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_10:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_15\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_9\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_11:\n        /* \"#utility.yul\":328:352   */\n      tag_17\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_10\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_7:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_19\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_11\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220747ee95f77118aeb6b26d5256b03df6ba9494852beb27a3e69233639da6dfbf364736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360fc806100da6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638da5cb5b14602d575b600080fd5b60336047565b604051603e919060ad565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006099826070565b9050919050565b60a7816090565b82525050565b600060208201905060c0600083018460a0565b9291505056fea2646970667358221220747ee95f77118aeb6b26d5256b03df6ba9494852beb27a3e69233639da6dfbf364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0xFC DUP1 PUSH2 0xDA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0xAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 DUP3 PUSH1 0x70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA7 DUP2 PUSH1 0x90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x7EE95F77118AEB6B26D5256B03DF6BA9494852BEB2 PUSH27 0x3E69233639DA6DFBF364736F6C634300080D003300000000000000 ",
							"sourceMap": "280:1118:0:-:0;;;867:108;;;;;;;;;;902:10;893:6;;:19;;;;;;;;;;;;;;;;;;960:6;;;;;;;;;;927:40;;956:1;927:40;;;;;;;;;;;;280:1118;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@owner_50": {
									"entryPoint": 71,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80638da5cb5b14602d575b600080fd5b60336047565b604051603e919060ad565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006099826070565b9050919050565b60a7816090565b82525050565b600060208201905060c0600083018460a0565b9291505056fea2646970667358221220747ee95f77118aeb6b26d5256b03df6ba9494852beb27a3e69233639da6dfbf364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0xAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 DUP3 PUSH1 0x70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA7 DUP2 PUSH1 0x90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x7EE95F77118AEB6B26D5256B03DF6BA9494852BEB2 PUSH27 0x3E69233639DA6DFBF364736F6C634300080D003300000000000000 ",
							"sourceMap": "280:1118:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1075:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1112:7;1139:6;;;;;;;;;;;1132:13;;1075:78;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "50400",
								"executionCost": "28043",
								"totalCost": "78443"
							},
							"external": {
								"owner()": "2500"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 280,
									"end": 1398,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 280,
									"end": 1398,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 1398,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 867,
									"end": 975,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 867,
									"end": 975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 867,
									"end": 975,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 867,
									"end": 975,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 902,
									"end": 912,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 893,
									"end": 899,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 893,
									"end": 899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 893,
									"end": 912,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 893,
									"end": 912,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 893,
									"end": 912,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 893,
									"end": 912,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 960,
									"end": 966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 960,
									"end": 966,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 960,
									"end": 966,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 960,
									"end": 966,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 956,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 927,
									"end": 967,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 927,
									"end": 967,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 280,
									"end": 1398,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 280,
									"end": 1398,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 1398,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 280,
									"end": 1398,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 1398,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 280,
									"end": 1398,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 1398,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220747ee95f77118aeb6b26d5256b03df6ba9494852beb27a3e69233639da6dfbf364736f6c634300080d0033",
									".code": [
										{
											"begin": 280,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 1398,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1153,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"OwnershipTransferred(address,address)\":{\"notice\":\"Event OwnershipTransferred is used to log that a ownership change of the token has occured\"}},\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"owner() returns the currently assigned owner of the Token \"}},\"notice\":\"Contract is a inheritable smart contract that will add a  New modifier called onlyOwner available in the smart contract inherting it  onlyOwner makes a function only callable from the Token owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xe94f421e9756feedbfae6d4e0f2038ab66f1c9fe1de83d10c501d66b153f1522\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b20f8a35e58fdd777ae3c0dab7e84e6a09077cd4686a966593de7faa1fc896cc\",\"dweb:/ipfs/QmeW5S9q7y6CrRF5huPTHNoWrtjqaYTqNHhXWeDdZkfXpD\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"OwnershipTransferred(address,address)": {
								"notice": "Event OwnershipTransferred is used to log that a ownership change of the token has occured"
							}
						},
						"kind": "user",
						"methods": {
							"owner()": {
								"notice": "owner() returns the currently assigned owner of the Token "
							}
						},
						"notice": "Contract is a inheritable smart contract that will add a  New modifier called onlyOwner available in the smart contract inherting it  onlyOwner makes a function only callable from the Token owner",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							51
						]
					},
					"id": 52,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "59:220:0",
								"text": " @notice Contract is a inheritable smart contract that will add a \n New modifier called onlyOwner available in the smart contract inherting it\n \n onlyOwner makes a function only callable from the Token owner"
							},
							"fullyImplemented": true,
							"id": 51,
							"linearizedBaseContracts": [
								51
							],
							"name": "Ownable",
							"nameLocation": "289:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "360:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "344:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "344:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "373:107:0",
										"text": " Event OwnershipTransferred is used to log that a ownership change of the token has occured"
									},
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 11,
									"name": "OwnershipTransferred",
									"nameLocation": "491:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "528:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "512:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "559:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "543:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:57:0"
									},
									"src": "485:84:0"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "756:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 15,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "775:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 16,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "785:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "775:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "797:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a",
																"typeString": "literal_string \"Ownable: only owner can call this function\""
															},
															"value": "Ownable: only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d0d036162c9aab6609c85e4c0587a73bb820080499caee974154a6e5eb3c53a",
																"typeString": "literal_string \"Ownable: only owner can call this function\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "767:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "767:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "767:75:0"
											},
											{
												"id": 22,
												"nodeType": "PlaceholderStatement",
												"src": "852:1:0"
											}
										]
									},
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "575:155:0",
										"text": " Modifier\n We create our own function modifier called onlyOwner, it will Require the current owner to be \n the same as msg.sender"
									},
									"id": 24,
									"name": "onlyOwner",
									"nameLocation": "744:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "753:2:0"
									},
									"src": "735:126:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "882:93:0",
										"statements": [
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 27,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "893:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 28,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "902:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "902:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "893:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "893:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 35,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "956:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "948:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 33,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "948:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "948:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 37,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "960:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 32,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "927:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "927:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "EmitStatement",
												"src": "922:45:0"
											}
										]
									},
									"id": 41,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "882:0:0"
									},
									"scope": 51,
									"src": "867:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1121:32:0",
										"statements": [
											{
												"expression": {
													"id": 47,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "1139:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 46,
												"id": 48,
												"nodeType": "Return",
												"src": "1132:13:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "981:89:0",
										"text": " @notice owner() returns the currently assigned owner of the Token\n "
									},
									"functionSelector": "8da5cb5b",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1084:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1089:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1112:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:9:0"
									},
									"scope": 51,
									"src": "1075:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 52,
							"src": "280:1118:0",
							"usedErrors": []
						}
					],
					"src": "33:1365:0"
				},
				"id": 0
			}
		}
	}
}