{
	"id": "14e4153425a6188c3d4dd88e095a9b95",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.12;\n\n/**\n* @notice Contract is a inheritable smart contract that will add a \n* New modifier called onlyOwner available in the smart contract inherting it\n* \n* onlyOwner makes a function only callable from the Token owner\n*\n*/\ncontract Ownable {\n\n    // _owner is the owner of the Token\n    address private _owner;\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":280:370  contract Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":280:370  contract Ownable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209cc8f9d35dd37c190bddbb3a4d9f3f5c99e9cc562f3d016e25b7564adb33980764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212209cc8f9d35dd37c190bddbb3a4d9f3f5c99e9cc562f3d016e25b7564adb33980764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC8 0xF9 0xD3 0x5D 0xD3 PUSH29 0x190BDDBB3A4D9F3F5C99E9CC562F3D016E25B7564ADB33980764736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "280:90:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212209cc8f9d35dd37c190bddbb3a4d9f3f5c99e9cc562f3d016e25b7564adb33980764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC8 0xF9 0xD3 0x5D 0xD3 PUSH29 0x190BDDBB3A4D9F3F5C99E9CC562F3D016E25B7564ADB33980764736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "280:90:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 280,
									"end": 370,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 280,
									"end": 370,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 370,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 280,
									"end": 370,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 280,
									"end": 370,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 370,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 280,
									"end": 370,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 280,
									"end": 370,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 280,
									"end": 370,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 370,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 370,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 280,
									"end": 370,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 280,
									"end": 370,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 280,
									"end": 370,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 280,
									"end": 370,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 280,
									"end": 370,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 370,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 280,
									"end": 370,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 370,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 280,
									"end": 370,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 370,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cc8f9d35dd37c190bddbb3a4d9f3f5c99e9cc562f3d016e25b7564adb33980764736f6c634300080d0033",
									".code": [
										{
											"begin": 280,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 280,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 280,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 370,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract is a inheritable smart contract that will add a  New modifier called onlyOwner available in the smart contract inherting it  onlyOwner makes a function only callable from the Token owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xec898b2a536248a2d97b7c20a4226605f03eb4de6881e28ae144d5a2bd54e905\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60c6451072fe29330420c088336618fdbb34d4f4b73787dca486bfbe42315b63\",\"dweb:/ipfs/QmZX683mWM8K5RHUCz3TG2wLGwA9Hr5Q9VRSLEAtViz98C\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contract is a inheritable smart contract that will add a  New modifier called onlyOwner available in the smart contract inherting it  onlyOwner makes a function only callable from the Token owner",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							5
						]
					},
					"id": 6,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "59:220:0",
								"text": " @notice Contract is a inheritable smart contract that will add a \n New modifier called onlyOwner available in the smart contract inherting it\n \n onlyOwner makes a function only callable from the Token owner"
							},
							"fullyImplemented": true,
							"id": 5,
							"linearizedBaseContracts": [
								5
							],
							"name": "Ownable",
							"nameLocation": "289:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "360:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 5,
									"src": "344:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "344:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 6,
							"src": "280:90:0",
							"usedErrors": []
						}
					],
					"src": "33:337:0"
				},
				"id": 0
			}
		}
	}
}