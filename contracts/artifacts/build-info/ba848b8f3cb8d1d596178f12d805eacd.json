{
	"id": "ba848b8f3cb8d1d596178f12d805eacd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.12;\n\n/**\n* @notice Contract is a inheritable smart contract that will add a \n* New modifier called onlyOwner available in the smart contract inherting it\n* \n* onlyOwner makes a function only callable from the Token owner\n*\n*/\ncontract Ownable {\n\n    // _owner is the owner of the Token\n    address private _owner;\n\n    /**\n    * Event OwnershipTransferred is used to log that a ownership change of the token has occured\n    */\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    \n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":280:577  contract Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":280:577  contract Ownable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c5ea4e35c331c76906688225062ce90807537049aceb0e059bf3c3119d5f866b64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220c5ea4e35c331c76906688225062ce90807537049aceb0e059bf3c3119d5f866b64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xEA 0x4E CALLDATALOAD 0xC3 BALANCE 0xC7 PUSH10 0x6688225062CE9080753 PUSH17 0x49ACEB0E059BF3C3119D5F866B64736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "280:297:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220c5ea4e35c331c76906688225062ce90807537049aceb0e059bf3c3119d5f866b64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xEA 0x4E CALLDATALOAD 0xC3 BALANCE 0xC7 PUSH10 0x6688225062CE9080753 PUSH17 0x49ACEB0E059BF3C3119D5F866B64736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "280:297:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 280,
									"end": 577,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 280,
									"end": 577,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 577,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 280,
									"end": 577,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 280,
									"end": 577,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 577,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 280,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 280,
									"end": 577,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 280,
									"end": 577,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 577,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 577,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 280,
									"end": 577,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 280,
									"end": 577,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 280,
									"end": 577,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 280,
									"end": 577,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 280,
									"end": 577,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 577,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 280,
									"end": 577,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 577,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 280,
									"end": 577,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 577,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c5ea4e35c331c76906688225062ce90807537049aceb0e059bf3c3119d5f866b64736f6c634300080d0033",
									".code": [
										{
											"begin": 280,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 280,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 280,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 577,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"OwnershipTransferred(address,address)\":{\"notice\":\"Event OwnershipTransferred is used to log that a ownership change of the token has occured\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract is a inheritable smart contract that will add a  New modifier called onlyOwner available in the smart contract inherting it  onlyOwner makes a function only callable from the Token owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0x6b570d9302156df1cf22de8c922451699d30ca8a9a623172f4f5986c42b86974\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://831ef300c0b3524f6196c67a4b71f877f6ee566c8e9e2f02322a0478f5a5651a\",\"dweb:/ipfs/QmcRAYC1bqknLKQ4niqgnwoYAKGoY3uZ24JBYXgoEzSMMz\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"OwnershipTransferred(address,address)": {
								"notice": "Event OwnershipTransferred is used to log that a ownership change of the token has occured"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contract is a inheritable smart contract that will add a  New modifier called onlyOwner available in the smart contract inherting it  onlyOwner makes a function only callable from the Token owner",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							12
						]
					},
					"id": 13,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "59:220:0",
								"text": " @notice Contract is a inheritable smart contract that will add a \n New modifier called onlyOwner available in the smart contract inherting it\n \n onlyOwner makes a function only callable from the Token owner"
							},
							"fullyImplemented": true,
							"id": 12,
							"linearizedBaseContracts": [
								12
							],
							"name": "Ownable",
							"nameLocation": "289:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "360:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 12,
									"src": "344:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "344:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "373:107:0",
										"text": " Event OwnershipTransferred is used to log that a ownership change of the token has occured"
									},
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 11,
									"name": "OwnershipTransferred",
									"nameLocation": "491:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "528:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "512:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "559:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "543:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:57:0"
									},
									"src": "485:84:0"
								}
							],
							"scope": 13,
							"src": "280:297:0",
							"usedErrors": []
						}
					],
					"src": "33:544:0"
				},
				"id": 0
			}
		}
	}
}